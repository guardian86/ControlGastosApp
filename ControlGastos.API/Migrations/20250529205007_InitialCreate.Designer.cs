// <auto-generated />
using System;
using ControlGastos.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlGastos.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250529205007_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlGastos.Core.Entities.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FondoMonetarioId");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.FondoMonetario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FondosMonetarios");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.GastoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GastoEncabezadoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GastoEncabezadoId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("GastoDetalles");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.GastoEncabezado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FondoMonetarioId");

                    b.ToTable("GastoEncabezados");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoPresupuestado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.TipoGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposGasto");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.Deposito", b =>
                {
                    b.HasOne("ControlGastos.Core.Entities.FondoMonetario", "FondoMonetario")
                        .WithMany()
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.GastoDetalle", b =>
                {
                    b.HasOne("ControlGastos.Core.Entities.GastoEncabezado", "GastoEncabezado")
                        .WithMany("Detalles")
                        .HasForeignKey("GastoEncabezadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlGastos.Core.Entities.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GastoEncabezado");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.GastoEncabezado", b =>
                {
                    b.HasOne("ControlGastos.Core.Entities.FondoMonetario", "FondoMonetario")
                        .WithMany()
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.Presupuesto", b =>
                {
                    b.HasOne("ControlGastos.Core.Entities.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("ControlGastos.Core.Entities.GastoEncabezado", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
